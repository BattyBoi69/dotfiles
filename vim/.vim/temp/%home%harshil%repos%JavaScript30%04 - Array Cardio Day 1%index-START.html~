<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>Array Cardio 💪</title>
		<link rel="icon" href="https://fav.farm/🔥" />
	</head>
	<body>
		<p><em>Psst: have a look at the JavaScript Console</em> 💁</p>
		<script>
			// Get your shorts on - this is an array workout!
			// ## Array Cardio Day 1

			// Some data we can work with

			const inventors = [
			{ first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 },
			{ first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 },
			{ first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 },
			{ first: 'Marie', last: 'Curie', year: 1867, passed: 1934 },
			{ first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 },
			{ first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 },
			{ first: 'Max', last: 'Planck', year: 1858, passed: 1947 },
			{ first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 },
			{ first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 },
			{ first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 },
			{ first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 },
			{ first: 'Hanna', last: 'Hammarström', year: 1829, passed: 1909 }
			];

			const people = [
			'Bernhard, Sandra', 'Bethea, Erin', 'Becker, Carl', 'Bentsen, Lloyd', 'Beckett, Samuel', 'Blake, William', 'Berger, Ric', 'Beddoes, Mick', 'Beethoven, Ludwig',
			'Belloc, Hilaire', 'Begin, Menachem', 'Bellow, Saul', 'Benchley, Robert', 'Blair, Robert', 'Benenson, Peter', 'Benjamin, Walter', 'Berlin, Irving',
			'Benn, Tony', 'Benson, Leana', 'Bent, Silas', 'Berle, Milton', 'Berry, Halle', 'Biko, Steve', 'Beck, Glenn', 'Bergman, Ingmar', 'Black, Elk', 'Berio, Luciano',
			'Berne, Eric', 'Berra, Yogi', 'Berry, Wendell', 'Bevan, Aneurin', 'Ben-Gurion, David', 'Bevel, Ken', 'Biden, Joseph', 'Bennington, Chester', 'Bierce, Ambrose',
			'Billings, Josh', 'Birrell, Augustine', 'Blair, Tony', 'Beecher, Henry', 'Biondo, Frank'
			];

			// Array.prototype.filter()
			// 1. Filter the list of inventors for those who were born in the 1500's
			const INVENTORS_b1500 = inventors.filter( item => item["year"] >= 1500 && item["year"] < 1600 );
			console.table(INVENTORS_b1500);

			// Array.prototype.map()
			// 2. Give us an array of the inventors first and last names
			function getFirstAndLast(inventor) {
				let inventorShortened = {};
				inventorShortened.first = inventor.first;
				inventorShortened.last = inventor.last;
				return inventorShortened;
			}
			const INVENTORS_FIRST_AND_LAST = inventors.map(getFirstAndLast);
			console.table(INVENTORS_FIRST_AND_LAST);

			const INVENTORS_FIRST_AND_LAST_2 = inventors.map(inventor => {
				let inventor2 = { ...inventor };
				delete inventor2.year;
				delete inventor2.passed;
				return inventor2;
			});
			console.table(INVENTORS_FIRST_AND_LAST_2);

			// Array.prototype.sort()
			// 3. Sort the inventors by birthdate, oldest to youngest
			const INVENTORS_bSORTED = inventors.sort( (a,b) => a.year - b.year);
			console.table(INVENTORS_bSORTED);

			// Array.prototype.reduce()
			// 4. How many years did all the inventors live all together?
			const INVENTOR_SUM_YEARS = inventors.reduce( ((acc, curr) => acc += +curr.passed - +curr.year), 0);
			console.log(INVENTOR_SUM_YEARS);

			// 5. Sort the inventors by years lived
			const INVENTORS_SORTED_LIVED = inventors.sort( (a,b) => (a.passed-a.year) - (b.passed-b.year));
			console.table(INVENTORS_SORTED_LIVED);

			// 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name
			// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris

			// const category = document.querySelector(".mv-category");
			// const links = Array.from(category.querySelectAll("a"));
			// const de = links
			//							.map(link => link.textContent)
			//							.filter(streetName => streetName.includes("de"));


			// 7. sort Exercise
			// Sort the people alphabetically by last name

			const PEOPLE_SORTED_LAST  = people.sort( (a,b) => {
				let aLast = a.split(",")[0];
				let bLast = b.split(",")[0];
				return aLast > bLast ? 1 : -1;
			}); 
			console.log(PEOPLE_SORTED_LAST);


			// 8. Reduce Exercise
			// Sum up the instances of each of these
			const data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck' ];
			const DATA_INSTANCES = data.reduce(
			(acc, curr) => {
				if (curr in acc) {
					acc[curr] += 1;
					} else {
					acc[curr] = 1;
				}
				return acc;
			},
			{} );
			console.log(DATA_INSTANCES);

		</script>
	</body>
</html>
