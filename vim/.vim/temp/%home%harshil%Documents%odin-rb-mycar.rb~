class Vehicule
  attr_accessor :color
  attr_reader :year

  @@number_of_vehicules = 0

  def initialize(year, model, color)
    @year = year
    @model = model
    @color = color
    @current_speed = 0
    @@number_of_vehicules += 1
  end

  def speed_up(number)
    @current_speed += number
    puts "You push the gas and accelerate #{number} mph."
  end

  def brake(number)
    @current_speed -= number
    puts "You push the brake and decelerate #{number} mph."
  end

  def current_speed
    puts "You are now going #{@current_speed} mph."
  end

  def shut_down
    @current_speed = 0
    puts "Let's park this bad boy!"
  end

  def spray_paint(color)
    self.color = color
    puts "Your new #{color} looks questionable."
  end

  def self.gas_mileage(miles, gallons)
    puts "#{miles/gallons} miles per gallon"
  end

  def to_s
    "A #{year} #{color} #{@model} going at #{@current_speed} mph"
  end

  def self.number
    puts "We have initialised #{@@number_of_vehicules} vehicules so far."
  end

  private

  def age
    (Time.now - Time.new(year)).year 
  end
end

class MyCar < Vehicule
  def initialize(year, model, color)
    super(year, model, color)
    @vehicule = "Car"
  end
end

module Storable
  def a_lot_of_storage?
    true
  end
end

class MyTruck < Vehicule
  include Storable

  def initialize(year, model, color)
    super(year, model, color)
    @vehicule = "Truck"
  end
end



lumina = MyCar.new(1997, 'chevy lumina', 'white')
honest = MyTruck.new(1999, 'lamborghini', 'black')
